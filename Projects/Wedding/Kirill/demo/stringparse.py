import re

response = """Вот текст свадебной песни для Кирилла и Анастасии Алмазовых с использованием указанных слов:

—

Куплет 1  
Сегодня мы здесь, в кругу друзей,  
Кирилл и Анастасия — счастье ваше, поверьте!  
Семья Красивый, вместе навсегда,  
В этой жизни радости вам желаю всегда.

Припев  
Стол накрыт, погнали, брат,  
Друзья вокруг, это наш парад!  
Креативный путь, вперед — газуй,  
Невероятно, как любовь вас согревает!

Куплет 2  
Семья Родинковых — великий и ужасный,  
Но вместе с вами он становится прекрасным.  
Кайфарик жизни, радости желаю,  
С каждым днем ваша любовь лишь крепчает!

Припев  
Стол накрыт, погнали, брат,  
Друзья вокруг, это наш парад!  
Креативный путь, вперед — газуй,  
Невероятно, как любовь вас согревает!

Бридж  
Добрый и странный мир вас обнимает,  
Счастье ваше — это то, что вдохновляет.  
Великолепный путь только начинается,  
С любовью и радостью жизнь продолжается!

Припев  
Стол накрыт, погнали, брат,  
Друзья вокруг, это наш парад!  
Креативный путь, вперед — газуй,  
Невероятно, как любовь вас согревает!

Финал  
Кирилл и Анастасия, счастья вам безмерно,  
Собрались мы здесь, чтобы быть вам верными.  
Семья ваша крепка, как никогда,  
С любовью и радостью — вперед навсегда!

—

Поздравляю Кирилла и Анастасию с их днем! Надеюсь, эта песня станет ярким моментом на их празднике!"""
def extract_text_between_first_and_last_em_dash(s):
    first_index = s.find('—')
    last_index = s.rfind('—')
    
    if first_index != -1 and last_index != -1 and first_index != last_index:
        return s[first_index + 1:last_index].strip()
    return ''


def replace_sections(text):
    # Словарь с заменами
    replacements = {
        'Припев': '[Chorus]',
        'Куплет 1': '[Verse 1]',
        'Куплет 2': '[Verse 2]',
        'Бридж': '[Bridge]',
        'Финал': '[Outro]',
        'Интро': '[Intro]'
    }
    
    # Функция замены
    def replace_match(match):
        return replacements[match.group(0)]
    
    # Регулярное выражение для поиска слов
    pattern = re.compile('|'.join(re.escape(key) for key in replacements.keys()))
    
    # Замена
    return pattern.sub(replace_match, text)


response = extract_text_between_first_and_last_em_dash(response)
print(response)
response = replace_sections(response)
print(response)