Вопрос 14 (Чтение сложных конструкций)

Теория:	
	- Правила чтения
		- Словарь :
			1) [] - массив типа ...
			2) [N] - массив из N элементов типа ...
			3) (type) - функция, принимающая аргумент типа 
				type и возвращающая ...	
			4) * - указатель на ...
		- Декодирование объявдегия выполняется изнутри 
		наружу. Отправной точкой является идентификатор.
		- Когда сталкиваетесь с выбором, отдавать преподчтение
		[] и (), а не *. (*name[] - массив типа, а не указатель 
								на)
	- Невалидные конструкции ( семантические ограничения )
		1)  Невозможно создать массив функций;
			int a[10](int);
		
		2) Функция не может вернуть функцию;
			int g(int)(int);
		
		3) Функция не может вернуть массив;
			int f(int)[];
		
		4) В массиве только левая лексема [] может быть пустой.
		
		5) Тип void ограниченный
				- void x; 	// ошибка
				- void x[5]; 	// ошибка
						
			
Дополнительно:
	
Практика: 
	int *(*x[10])(void)
	 - х - это массив из 10 элементов типа  указатель на функцию, которая принимает void и возвращает указатель на int.
	
	char *(*(**foo[][8])())[];
	- foo - это массив типа массив из 8 элементов типа указатель на указатель на функцию, которая ничего не принимает и возвращает указатель на массив типа указатель на char.
	
	void (*signal(int, void(*fp) (int)))(int);
	signal - это функцию, которая принимает int и указатель на функцию, которая принимает int и ничего не возвращает, которая возвращает указатель на функцию, которая принимает тип int  и ничего не возвращает.
	
	
