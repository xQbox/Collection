Вопрос 18-28 (Абстрактные типы данных)

	- Это интерфейс, который определяет тип данных и операции над 		
	этим типом. Абстрактным называется, потому что интерфейс 
	скрывает его реализация и представление.

Теория:
	0) Массив
		- Сложность:
			(Массив)  		      Лучшее\ Среднее\ Худшее
			Вставка элемента  	     (O(1)) \ (O(n)) \ (O(n))
			Удаление элемента 	     (O(1)) \ (O(n)) \ (O(n)) 
			Доступ к элементу 	     (O(1)) \ (O(1)) \ (O(1))
			Поиск элемента 		     (O(1)) \ (O(n)) \ (O(n))	
	
	1) Списки:
		- Это абстрактный тип данных. 
		- Сложность: 
			( односвязный )                    Лучшее\ Среднее\ Худшее
			Вставка элемента  		   (O(1))\ (O(1)) \ (O(n))
			Удаление элемента 	 	   (O(1))\ (O(1)) \ (O(n)) 
			Доступ к элементу 	 	   (O(1))\ (O(n)) \ (O(n))
			Поиск элемента 		 	   (O(1))\ (O(n)) \ (O(n))
			
			( двусвязный )			   Лучшее\ Среднее\ Худшее
			Вставка элемента  		   (O(1))\ (O(1)) \ (O(1))
			Удаление элемента 	 	   (O(1))\ (O(1)) \ (O(1)) 
			Доступ к элементу 	 	   (O(1))\ (O(n)) \ (O(n))
			Поиск элемента 		 	   (O(1))\ (O(n)) \ (O(n))
			
		- Линейные
			- Односвязные списки
			- Двусвязные списки
			
		- Циклические 
			- Односвязные списки
			- Двусвязные списки
			
	
	2) Двоичное дерево поиска
		- Это абстрактный тип данных
		- Сложность:
			( Двоичное дерево поиска ДДП )  Лучшее\ Среднее\ Худшее
			Вставка элемента  	(O(log n)) \ (O(log n)) \ (O(n))
			Удаление элемента 	(O(log n)) \ (O(log n)) \ (O(n)) 
			Доступ к элементу 	(O(log n)) \ (O(log n)) \ (O(n))
			Поиск элемента 		(O(log n)) \ (O(log n)) \ (O(n))
			
			( АВЛ-деревья )			Лучшее\ Среднее\ Худшее
			Вставка элемента       (O(log n)) \ (O(log n)) \ (O(log n))
			Удаление элемента      (O(log n)) \ (O(log n)) \ (O(log n)) 
			Доступ к элементу      (O(log n)) \ (O(log n)) \ (O(log n))
			Поиск элемента 	       (O(log n)) \ (O(log n)) \ (O(log n))
			
			( Красночерные деревья )        Лучшее\ Среднее\ Худшее
			Вставка элемента       (O(log n)) \ (O(log n)) \ (O(log n))
			Удаление элемента      (O(log n)) \ (O(log n)) \ (O(log n)) 
			Доступ к элементу      (O(log n)) \ (O(log n)) \ (O(log n))
			Поиск элемента 	       (O(log n)) \ (O(log n)) \ (O(log n))
	
	3) Хеш-таблица 
		- Это абстрактный тип данных
		- Сложность:
			(Хеш-таблица)  		      Лучшее\ Среднее\ Худшее
			Вставка элемента  	     (O(1)) \ (O(1)) \ (O(n))
			Удаление элемента 	     (O(1)) \ (O(1)) \ (O(n)) 
			Доступ к элементу 	     (O(1)) \ (O(1)) \ (O(n))
			Поиск элемента 		     (O(1)) \ (O(1)) \ (O(n))		
	
	4) Куча 
	
	
	
	
	5) Стек
		- Это абстрактный тип данных
		- Сложность:
			(Стек)  		      Лучшее\ Среднее\ Худшее
			Вставка элемента  	     (O(1)) \ (O(1)) \ (O(n))
			Удаление элемента 	     (O(1)) \ (O(1)) \ (O(n)) 
			Доступ к элементу 	     (O(1)) \ (O(n)) \ (O(n))
			Поиск элемента 		     (O(1)) \ (O(n)) \ (O(n))	
	
	
	6) Очередь
		- Это абстрактный тип данных
		- Сложность:
			(Очередь)  		      Лучшее\ Среднее\ Худшее
			Вставка элемента  	     (O(1)) \ (O(1)) \ (O(n))
			Удаление элемента 	     (O(1)) \ (O(1)) \ (O(n)) 
			Доступ к элементу 	     (O(1)) \ (O(n)) \ (O(n))
			Поиск элемента 		     (O(1)) \ (O(n)) \ (O(n))	


Дополнительно:
				
Практика: 
	смотреть папку ADT 

	
